{"name": "Get companies with pagination", "status": "failed", "statusDetails": {"message": "AssertionError: None", "trace": "self = <tests.test_company.test_get_companies.TestGetCompanies object at 0x000001D790716500>\nget_test_name = 'tests/test_company/test_get_companies.py::TestGetCompanies::test_pagination[0-10-HTTPStatus.BAD_REQUEST] (setup)'\nadmin_auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDI4NDYwMzYsInN1YiI6IjZhNDczYWJiLTQ3NjAtNGM0ZC05YmQxLWU4ZmI2ZTRlZjI1OSJ9.JvbGBFCB1rQ1syD0J4OY25MmCPWXQhzkNznmh27zd7o'}\npage = 0, per_page = 10, expected_status = <HTTPStatus.BAD_REQUEST: 400>, total_companies = 606\n\n    @allure.title(\"Get companies with pagination\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.parametrize(\n        \"page, per_page, expected_status\",\n        [\n            (1, 10, HTTPStatus.OK),\n            (1, 100, HTTPStatus.OK),\n            (50, 10, HTTPStatus.OK),\n            (1, 200, HTTPStatus.OK),\n            (0, 10, HTTPStatus.BAD_REQUEST),\n            (-1, 10, HTTPStatus.BAD_REQUEST),\n            (None, None, HTTPStatus.BAD_REQUEST),\n            (\"abc\", 10, HTTPStatus.BAD_REQUEST),\n            (1, \"xyz\", HTTPStatus.BAD_REQUEST),\n        ],\n    )\n    def test_pagination(\n        self,\n        get_test_name,\n        admin_auth_headers,\n        page,\n        per_page,\n        expected_status,\n        total_companies,\n    ):\n        response = self.request.get(\n            url=f\"{self.url.list_of_companies}?page={page}&per_page={per_page}\",\n            headers=admin_auth_headers,\n        )\n>       self.assertions.assert_status_code(\n            response=response,\n            expected_status_code=expected_status,\n            test_name=get_test_name,\n        )\n\ntests\\test_company\\test_get_companies.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500 Internal Server Error]>, expected_status_code = <HTTPStatus.BAD_REQUEST: 400>\ntest_name = 'tests/test_company/test_get_companies.py::TestGetCompanies::test_pagination[0-10-HTTPStatus.BAD_REQUEST] (setup)'\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code: int, test_name: str):\n        actual_status_code = response.status_code\n>       assert actual_status_code == expected_status_code, get_logger(test_name).error(\n            f\"Expected {expected_status_code} status code but got {actual_status_code} status code instead\"\n        )\nE       AssertionError: None\n\nsrc\\assertions.py:13: AssertionError"}, "attachments": [{"name": "GET Response", "source": "98c240b8-827d-4255-9f8a-b0e327676e06-attachment.json", "type": "application/json"}, {"name": "log", "source": "d7972189-aed6-4c56-929e-14017430ca2b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "page", "value": "0"}, {"name": "per_page", "value": "10"}, {"name": "expected_status", "value": "<HTTPStatus.BAD_REQUEST: 400>"}], "start": 1742845135870, "stop": 1742845136036, "uuid": "521ee5a9-5baf-4ab6-821c-5ee20dd3ff52", "historyId": "6f16a9c45599ffafd3fc68dae066db0d", "testCaseId": "65f8860f8cdfb7583bd52af34f4c5a0a", "fullName": "tests.test_company.test_get_companies.TestGetCompanies#test_pagination", "labels": [{"name": "severity", "value": "normal"}, {"name": "epic", "value": "Testing get company list"}, {"name": "parentSuite", "value": "tests.test_company"}, {"name": "suite", "value": "test_get_companies"}, {"name": "subSuite", "value": "TestGetCompanies"}, {"name": "host", "value": "DESKTOP-7NMG6HA"}, {"name": "thread", "value": "13480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_company.test_get_companies"}]}