{"name": "End-to-End Test: Multi-Order Routing and Delivery Flow", "status": "failed", "statusDetails": {"message": "AssertionError: None", "trace": "self = <test_delivery_couier_flow.TestDeliveryCourierFlow object at 0x000001D790717E50>, timer = None\nget_test_name = 'tests/e2e/test_delivery_couier_flow.py::TestDeliveryCourierFlow::test_multiple_deliveries_routing_flow (setup)'\nlogistician_saas_auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDI4NDUzNDQsInN1YiI6ImYwNDYwMzg1LTQ3MTUtNGQ1Mi05NDg5LTE3ZWMwZDAzODY4NiJ9.otvI7RrP2zBC44x-JOiMF__KkLA7p9YRjQ9FmtQgVHw'}\ncourier_saas_auth_headers = {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NDI4NDUzNDQsInN1YiI6ImYwNDEwY2Q4LTJiMWUtNGIwYi05ZjBiLTViZWVmN2QxYTk5MyJ9.5qxJJVFQsdMrFnB1rPpGiZs35M8Ron78OBIlV79yeR0'}\ncourier_data = {'company_id': 'ac6d1196-3488-49b0-b670-8361bca1d8d6', 'pickup_point_id': '9f8896d7-3f85-4d8c-9d6e-e0b9c672cf9a'}\n\n    @allure.title(\"End-to-End Test: Multi-Order Routing and Delivery Flow\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_multiple_deliveries_routing_flow(\n        self,\n        timer,\n        get_test_name,\n        logistician_saas_auth_headers,\n        courier_saas_auth_headers,\n        courier_data,\n    ):\n        \"\"\"\n        Проверка полного цикла маршрутизации и выполнения нескольких доставок:\n        - Создание нескольких заказов.\n        - Включение смены курьера.\n        - Назначение курьера на все заказы.\n        - Выполнение доставки для каждого заказа.\n        - Проверка маршрута курьера на корректность данных и финальный статус.\n        \"\"\"\n        company_id = courier_data[\"company_id\"]\n        pickup_point_id = courier_data[\"pickup_point_id\"]\n        courier_id = self.auth_service.get_courier_id(courier_saas_auth_headers)\n        date = datetime.now().strftime(\"%Y-%m-%d\")\n    \n        # Генерация списка заказов\n        orders = generate_hardcoded_orders()\n    \n        # Загрузка маршрутов из файла\n        geo_updates_data = load_json(\"tests/e2e/config/geo_updates.json\")\n    \n        # Преобразование данных в список маршрутов для удобного доступа\n        geo_updates = [\n            geo_updates_data[\"first_order\"],\n            geo_updates_data[\"second_order\"],\n            geo_updates_data[\"third_order\"],\n        ]\n    \n        # Шаг 1: Создание заказов\n        order_ids = self.create_deliveries(\n            get_test_name,\n            company_id,\n            pickup_point_id,\n            orders,\n            logistician_saas_auth_headers,\n        )\n    \n        # Шаг 2: Включение смены для курьера\n        self.courier_service.turn_on_shift(\n            get_test_name, courier_id, pickup_point_id, logistician_saas_auth_headers\n        )\n    \n        # Шаг 3: Назначение курьера на заказы\n        self.assign_deliveries(\n            get_test_name, order_ids, courier_id, logistician_saas_auth_headers\n        )\n    \n        # Шаг 4: Обновление геопозиции курьера и выполнение заказов\n        for idx, order_id in enumerate(order_ids):\n            # geo_updates[idx] - список координат для текущего заказа\n            self.complete_order(\n                get_test_name,\n                courier_id,\n                courier_saas_auth_headers,\n                order_id,\n                geo_updates[idx],\n            )\n    \n        # Шаг 5: Проверяем статус маршрута\n        # Ждем 10 секунд перед началом проверки\n        time.sleep(10)\n    \n        # Пытаемся проверить статус маршрута до 3 раз\n        max_attempts = 3\n        for attempt in range(max_attempts):\n            print(f\"Checking route status. Attempt {attempt + 1}/{max_attempts}.\")\n            try:\n                self.route_service.get_route_status(\n                    get_test_name,\n                    company_id,\n                    courier_id,\n                    pickup_point_id,\n                    date,\n                    logistician_saas_auth_headers,\n                )\n                print(f\"Route status checked successfully on attempt {attempt + 1}.\")\n                break  # Если статус успешно проверен, выходим из цикла\n            except AssertionError as e:\n                # Если это не последняя попытка, ждем перед следующей проверкой\n                if attempt < max_attempts - 1:\n                    print(\n                        f\"Attempt {attempt + 1}/{max_attempts} to check route status failed. Error: {e}. \"\n                        f\"Retrying in 5 seconds...\"\n                    )\n                    time.sleep(5)\n                else:\n                    print(f\"All {max_attempts} attempts to check route status failed. Error: {e}.\")\n>                   raise e\n\ntests\\e2e\\test_delivery_couier_flow.py:212: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests\\e2e\\test_delivery_couier_flow.py:192: in test_multiple_deliveries_routing_flow\n    self.route_service.get_route_status(\nservices\\route_service.py:65: in get_route_status\n    self.assertions.assert_route_status(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nroute_id = 'e6d40f50-785f-4fe4-af29-05fcc9df3e8a', actual_courier_id = 'f0410cd8-2b1e-4b0b-9f0b-5beef7d1a993'\nexpected_courier_id = 'f0410cd8-2b1e-4b0b-9f0b-5beef7d1a993', actual_deliveries_count = 15, expected_deliveries_count = 15, actual_status = 'performing'\nexpected_status = 'closed', test_name = 'tests/e2e/test_delivery_couier_flow.py::TestDeliveryCourierFlow::test_multiple_deliveries_routing_flow (setup)'\n\n    @staticmethod\n    def assert_route_status(\n        route_id,\n        actual_courier_id,\n        expected_courier_id,\n        actual_deliveries_count,\n        expected_deliveries_count,\n        actual_status,\n        expected_status,\n        test_name\n    ):\n        \"\"\"\n        Проверяет корректность параметров маршрута.\n        \"\"\"\n        assert actual_courier_id == expected_courier_id, get_logger(test_name).error(\n            f\"Expected courier ID '{expected_courier_id}', but got '{actual_courier_id}' for route {route_id}.\"\n        )\n        assert actual_deliveries_count == expected_deliveries_count, get_logger(test_name).error(\n            f\"Expected deliveries count '{expected_deliveries_count}', but got '{actual_deliveries_count}' for route {route_id}.\"\n        )\n>       assert actual_status == expected_status, get_logger(test_name).error(\n            f\"Expected status '{expected_status}', but got '{actual_status}' for route {route_id}.\"\n        )\nE       AssertionError: None\n\nsrc\\assertions.py:73: AssertionError"}, "description": "\n        Проверка полного цикла маршрутизации и выполнения нескольких доставок:\n        - Создание нескольких заказов.\n        - Включение смены курьера.\n        - Назначение курьера на все заказы.\n        - Выполнение доставки для каждого заказа.\n        - Проверка маршрута курьера на корректность данных и финальный статус.\n        ", "attachments": [{"name": "Request", "source": "cf597d6c-c137-4114-95ef-eafbdfadd457-attachment.json", "type": "application/json"}, {"name": "POST Response", "source": "32d7e64a-70d2-48a4-bfc4-5156d001d3de-attachment.json", "type": "application/json"}, {"name": "Request", "source": "a06df041-401e-4138-9e34-2b94a1b13734-attachment.json", "type": "application/json"}, {"name": "POST Response", "source": "47887e21-1e00-48dc-b1a2-3f2aa93501e9-attachment.json", "type": "application/json"}, {"name": "Request", "source": "21e61fd6-08b8-4cbf-983d-bc2b80f0ed1c-attachment.json", "type": "application/json"}, {"name": "POST Response", "source": "220efc07-f69f-4af5-aa9e-bbc8d3fd700a-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "1267607c-5f14-4775-8927-416b23c2ac18-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "efd8361b-3288-4ef8-8451-231a40626870-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "299541e6-7c4f-4866-ab66-45b9af099333-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "6848b2cb-072e-4092-bfc5-ddadf69ae1c0-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "d79a190c-b9e9-4c18-b82a-07b242a080c1-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "4ed817e1-c04b-47ac-bd5e-fc2449ee149c-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "727a0bf0-6b64-421f-a140-e6b259633872-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "7985f8e0-f13e-4364-a756-089302cf0469-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "d40af36f-076b-4d95-8405-d250ed571d64-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "2e850bd0-d017-4fb5-8ac7-89cca2d52d3b-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "0564621e-2774-4aa3-8d2f-a6777618cc1e-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "b2b033df-9539-4309-a60f-2f4ff65c2d54-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "1032d342-0ab2-46b7-a20b-eb71d282f006-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "3cf51706-83d3-4e2c-b146-0d231b2b79d2-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "321922c3-0753-47ca-bda2-b3a2f0783c6e-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "4cbfe5e1-9f21-4e7c-8c54-3d4097f4b84a-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "9de96f16-8f4b-4c94-97a6-8aea574660ec-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "7821fbcb-5cc1-4b1f-8d6f-6f3ee4b7051b-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "6abba1b9-b4c9-4976-8426-b91f696f534c-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "6b83642e-e125-4933-9932-ed41e80ae01b-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "31b460be-ae0e-45a5-9a4e-50eab1aefd2a-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "6760e89e-8b9f-4d7d-8c4d-4e95e93aaa97-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "fc32a19a-5efd-42c3-a674-92640997014b-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "a2382ecc-8609-4422-8347-8166685c2934-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "3ad1ed3d-b837-4886-987d-b34f80eeb4ab-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "fb4c85c8-aadb-43ef-8fa0-deafe8e80fb8-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "b1ecfe6b-2083-44b4-8abf-e7627c0a981f-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "04505742-8cb1-4102-a38a-341b1967ecf1-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "69d4b3ff-8b8a-4943-8bb0-63320ceca202-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "4e37bcfd-7abe-4b72-8b8c-f9bceed13fec-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "3d8b1f5e-24ee-4de4-9be0-2fa1fddea5d9-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "135c5f04-cd3f-41ee-8b4f-998829dc7886-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "c6ba7582-2f3d-4c02-8086-f175d38beeac-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "c09fed6c-a9e4-4fc9-84c2-78418a4203e9-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "b5eb7cfd-0c0a-45ec-bacc-2734d76e98c1-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "7bb8eedd-c6f5-44ab-896e-cddfdbbfb189-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "5c33a3f1-17b7-45e0-a409-eccaf18d93a2-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "c2ce2028-d1bc-42e3-9fcb-c7ccdd88df17-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "a530029e-980f-4e74-8b6c-5374293e8a8c-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "909846ab-b05e-4f26-99a7-efa6f60d1b18-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "84228675-e6a0-415e-be13-14a3e2f633c3-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "20fd7caf-6d53-48e4-81e0-d485be328037-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "f48faa45-70ba-470c-95bd-12d9e7b09633-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "c8bd1ea6-96b9-4d38-853e-98e9a60daa77-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "93c5e7e4-0772-4060-b49d-0e374177e038-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "9b05cee1-1552-418a-8e24-6e11a10eb43a-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "51899e5a-4744-4e65-bf3b-6b8f203317c4-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "59d3cd27-ab81-4ec8-8d06-770be2d961a5-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "69fa823b-52bd-41b1-9b16-3886b2f1b4a2-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "fbe16e85-7e3b-456c-acfe-96a526a5fcf3-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "76018196-de01-4178-bd11-3a6e0e3de2c1-attachment.json", "type": "application/json"}, {"name": "PATCH Response", "source": "ab24bf88-5a39-4414-9d70-29afdb3e414b-attachment.json", "type": "application/json"}, {"name": "GET Response", "source": "3e2a7511-c75c-4a8f-bb68-c823b8733419-attachment.json", "type": "application/json"}, {"name": "GET Response", "source": "c331e1f1-4814-4842-8da1-1e2a5fa75993-attachment.json", "type": "application/json"}, {"name": "GET Response", "source": "7791c05a-59a5-41cc-83fd-2ff4732887c0-attachment.json", "type": "application/json"}, {"name": "log", "source": "9e4a846e-079d-46ea-868e-383177681900-attachment.txt", "type": "text/plain"}], "start": 1742844443624, "stop": 1742845129245, "uuid": "145c5cd9-f03a-4af2-b7eb-19357e629d84", "historyId": "92f789503f2818e0bc97368088a188d6", "testCaseId": "92f789503f2818e0bc97368088a188d6", "fullName": "tests.e2e.test_delivery_couier_flow.TestDeliveryCourierFlow#test_multiple_deliveries_routing_flow", "labels": [{"name": "epic", "value": "Testing delivery creation, delivery assignment and delivery completion by courier for SAAS company"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "tests.e2e"}, {"name": "suite", "value": "test_delivery_couier_flow"}, {"name": "subSuite", "value": "TestDeliveryCourierFlow"}, {"name": "host", "value": "DESKTOP-7NMG6HA"}, {"name": "thread", "value": "13480-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.e2e.test_delivery_couier_flow"}]}